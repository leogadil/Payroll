<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>